# ========================================
# APPLICATION.PROPERTIES - Smart Code Review Service
# ========================================

# Application Information
spring.application.name=smart-code-review
server.port=8083
spring.profiles.active=${SPRING_PROFILES_ACTIVE:production}

# ========================================
# AWS CONFIGURATION
# ========================================
# AWS Credentials will be loaded from environment or IAM roles
aws.region=${AWS_REGION:us-east-1}

# Disable AWS SDK credential profile loading
aws.use-default-credential-provisder=false
spring.cloud.aws.credentials.profile-name=
spring.cloud.aws.credentials.profile-path=/dev/null
aws.sdk.disableEc2Metadata=true

# AWS Bedrock Configuration
aws.bedrock.region=us-east-1
aws.bedrock.model-id=us.amazon.nova-premier-v1:0
aws.bedrock.max-concurrent-requests=1
aws.bedrock.requests-per-minute=1
aws.bedrock.max-chunk-size=50000
aws.bedrock.max-tokens-per-request=100000
aws.bedrock.chunk.delay.base=25000
aws.bedrock.chunk.delay.max=120000

# Increase timeouts
spring.mvc.async.request-timeout=600000



# AWS S3 Configuration
aws.s3.bucket-name=smartcode-uploads
aws.s3.region=us-east-1
aws.s3.upload.max-size=52428800
aws.s3.upload.allowed-types=application/zip,application/x-zip-compressed,application/x-tar,application/x-gzip

# ========================================
# SENDGRID EMAIL CONFIGURATION
# ========================================
sendgrid.api.key=${SENDGRID_API_KEY:}
sendgrid.from.email=${SENDGRID_FROM_EMAIL:smartcode@somdip.dev}
sendgrid.from.name=${SENDGRID_FROM_NAME:Smart Code Review}

# ========================================
# SECURITY CONFIGURATION
# ========================================
# JWT Configuration
jwt.secret=${JWT_SECRET:smart-code-review-secret-key-2025}
jwt.expiration=${JWT_EXPIRATION:7200000}

# CORS Configuration
cors.allowed.origins=${CORS_ALLOWED_ORIGINS:https://smartcode.somdip.dev,http://localhost:3000,http://localhost:8083}

# ========================================
# FILE UPLOAD CONFIGURATION
# ========================================
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB
spring.servlet.multipart.file-size-threshold=2KB

# ========================================
# CACHE CONFIGURATION
# ========================================
spring.cache.type=caffeine
spring.cache.caffeine.spec=maximumSize=1000,expireAfterWrite=30m

# ========================================
# ACTUATOR CONFIGURATION
# ========================================
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when-authorized
management.info.env.enabled=true

# Custom health indicators
management.health.custom.enabled=true

# ========================================
# LOGGING CONFIGURATION
# ========================================
logging.level.root=INFO
logging.level.com.somdiproy.smartcode=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.software.amazon.awssdk=DEBUG

# Production logging pattern
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# File logging for production
logging.file.name=/app/logs/smart-code-review.log
logging.file.max-size=10MB
logging.file.max-history=7

# ========================================
# SESSION CONFIGURATION
# ========================================
# Demo session configuration
demo.session.duration.minutes=${DEMO_SESSION_DURATION:120}
# Session limits
demo.session.max.concurrent=100
demo.session.max.per.ip=3
demo.session.max.per.email=1
demo.session.cleanup.interval=60000



# ========================================
# ANALYSIS CONFIGURATION
# ========================================
# Code analysis limits
analysis.code.max-size=${ANALYSIS_CODE_MAX_SIZE:100000}
analysis.file.max-size=${ANALYSIS_FILE_MAX_SIZE:52428800}


# ========================================
# INTEGRATION CONFIGURATION
# ========================================
# Portfolio service integration
portfolio.service.url=${PORTFOLIO_SERVICE_URL:https://somdip.dev}
portfolio.service.enabled=${PORTFOLIO_SERVICE_ENABLED:true}

# HR Demo service integration
hr.demo.service.url=${HR_DEMO_SERVICE_URL:https://demos.somdip.dev}
hr.demo.service.enabled=${HR_DEMO_SERVICE_ENABLED:true}

# ========================================
# PERFORMANCE CONFIGURATION
# ========================================
# Thread pool configuration
spring.task.execution.thread-name-prefix=smartcode-
# Performance tuning
spring.task.execution.pool.core-size=5
spring.task.execution.pool.max-size=10
spring.task.execution.pool.queue-capacity=25

# ========================================
# PRODUCTION OPTIMIZATIONS
# ========================================
# JVM optimizations
server.compression.enabled=true
server.compression.mime-types=application/json,application/xml,text/html,text/xml,text/plain,application/javascript,text/css

# Connection pool
server.tomcat.max-connections=200
server.tomcat.threads.max=50
server.tomcat.threads.min-spare=10

# Keep alive
server.tomcat.keep-alive-timeout=20000
server.tomcat.max-keep-alive-requests=100

# ========================================
# THYMELEAF CONFIGURATION
# ========================================
spring.thymeleaf.cache=false
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.mode=HTML
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
logging.level.org.thymeleaf=DEBUG
logging.level.org.springframework.web=DEBUG

# ========================================
# STATIC RESOURCES CONFIGURATION
# ========================================
spring.web.resources.static-locations=classpath:/static/
spring.web.resources.cache.cachecontrol.max-age=31536000
spring.web.resources.cache.cachecontrol.cache-public=true

# ========================================
# ERROR HANDLING
# ========================================
server.error.whitelabel.enabled=false
server.error.path=/error
server.error.include-message=always
server.error.include-binding-errors=always

# ========================================
# GOOGLE ANALYTICS CONFIGURATION
# ========================================
google.analytics.measurement-id=${GOOGLE_ANALYTICS_ID:G-TJMD3KM77H}
google.analytics.enabled=${GOOGLE_ANALYTICS_ENABLED:true}

# ========================================
# GitHub API Configuration
# ========================================
github.api.token=${GITHUB_API_TOKEN:}
github.api.base-url=https://api.github.com

#Extra AWS

# SQS Configuration
#aws.sqs.queue-name=bedrock-analysis-queue
#aws.sqs.visibility-timeout=1800

# AWS Step Functions Configuration
aws.stepfunctions.enabled=${STEP_FUNCTIONS_ENABLED:true}
aws.stepfunctions.state-machine-arn=${STEP_FUNCTIONS_STATE_MACHINE_ARN:arn:aws:states:us-east-1:257394460825:stateMachine:SmartCodeAnalysisPipeline}
aws.stepfunctions.region=us-east-1

# Staggered delay configuration - Optimized for Bedrock limits
#analysis.queue.base.delay.seconds=60
#analysis.queue.delay.per.message.seconds=30
#analysis.queue.max.delay.seconds=900
#bedrock.rate.limit.per.minute=1

# DynamoDB Configuration
aws.dynamodb.table-name=code-analysis-results


# Bedrock Configuration
bedrock.processing.mode=async

# Analysis timeout
analysis.timeout.seconds=300

#Rate Limiting Config
rate.limit.analysis.per.minute=10
rate.limit.api.per.minute=120
rate.limit.session.per.minute=120

# application.properties
pdf.generation.timeout=30000
pdf.generation.max-size=10485760

